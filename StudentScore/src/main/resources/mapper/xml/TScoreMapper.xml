<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.thorns.studentScore.mapper.TScoreMapper">
    <resultMap id="scorerListDto" type="top.thorns.studentScore.dto.ScoreLIstDto">
        <result column="score_id" javaType="int" property="scoreId"/>
        <result column="stu_id" javaType="int" property="stuId"/>
        <result column="stu_Name" javaType="string" property="stuName"/>
        <result column="exam_name" javaType="string" property="examName"/>
        <result column="class_name" javaType="string" property="className"/>
        <result column="language_score" javaType="int" property="languageScore"/>
        <result column="math_score" javaType="int" property="mathScore"/>
        <result column="english_score" javaType="int" property="englishScore"/>
        <result column="politics_score" javaType="int" property="politicsScore"/>
        <result column="history_score" javaType="int" property="historyScore"/>
        <result column="geog_score" javaType="int" property="geogScore"/>
        <result column="total_points" javaType="int" property="totalPoints"/>
    </resultMap>
    <!-- 根据考试编号分页查询考试成绩 -->
    <!-- 根据考试编号分页查询考试成绩并排序  -->
    <!-- 动态传入字段名和关键字使用$ 不进行预编译直接传入数据，使用#进行预编译 string类型会自带引号-->
    <select id="scoreExamPage" resultType="top.thorns.studentScore.dto.ScoreLIstDto">
        select
        s.score_id,s.stu_id,stu.stu_name,e.exam_name,c.class_name,s.language_score,s.math_score,s.english_score,s.politics_score,s.history_score,s.geog_score,SUM(s.language_score+s.math_score+s.english_score+s.politics_score+s.history_score+s.geog_score)total_points
        from t_score s,t_exam e,t_student stu,t_class c
        where s.stu_id=stu.stu_id AND
        s.class_id=c.class_id and
        s.exam_id=#{examId} and
        s.exam_id=e.exam_id
        group by s.score_id
        <if test="order!=null">
            order by ${prop} ${order}
        </if>
        <if test="order==null">
            order by s.score_id ASC
        </if>
        limit #{currentPage},#{pageSize}
    </select>
    <!--  根据考试编号查询总记录数  -->
    <select id="selectPageTotal" resultType="int">
        select COUNT(*)
        from t_score
        where exam_id = #{examId}
    </select>
    <!--  根据学生姓名和考试编号查询具体成绩信息  -->
    <select id="selectByStuNameScore" resultType="top.thorns.studentScore.dto.ScoreLIstDto">
        select s.score_id,
               s.stu_id,
               stu.stu_name,
               e.exam_name,
               c.class_name,
               s.language_score,
               s.math_score,
               s.english_score,
               s.politics_score,
               s.history_score,
               s.geog_score,
               SUM(s.language_score + s.math_score + s.english_score + s.politics_score + s.history_score +
                   s.geog_score) total_points
        from t_score s,
             t_exam e,
             t_student stu,
             t_class c
        where stu.stu_id = s.stu_id
          and s.exam_id = e.exam_id
          and s.exam_id = #{examId}
          and s.class_id = c.class_id
          and stu.stu_name in (SELECT stu.stu_name
                               FROM t_student stu
                               WHERE stu.stu_name LIKE #{stuName})
        group by s.stu_id
    </select>
    <!--  根据考试编号和班级编号查询成绩  -->
    <select id="selectByClassIdExamIdScore" resultType="top.thorns.studentScore.dto.ScoreLIstDto">
        SELECT
        s.score_id,s.stu_id,stu.stu_name,e.exam_name,c.class_name,s.language_score,s.math_score,s.english_score,s.politics_score,s.history_score,s.geog_score,SUM(s.language_score+s.math_score+s.english_score+s.politics_score+s.history_score+s.geog_score)total_points
        from t_score s,t_exam e,t_student stu,t_class c
        WHERE
        <if test="examId!=null">
            e.exam_id =#{examId} and
        </if>
        <if test="classId!=null">
            c.class_id=#{classId} and
            s.class_id=c.class_id and
        </if>
        <if test="classId==null">
            c.class_id in(
            SELECT c.class_id
            from t_teacher t,t_relation r,t_class c
            where t.tea_id=#{teaId} AND
            t.tea_id=r.tea_id AND
            r.class_id=c.class_id) and
            s.class_id=c.class_id and
        </if>
        s.exam_id=e.exam_id and
        s.stu_id=stu.stu_id
        GROUP BY s.score_id
        <if test="order!=null and order.length()>0">
            order by ${prop} ${order}
        </if>
        <if test="order==null || order.length()==0">
            order by s.score_id ASC
        </if>
        limit #{currentPage},#{pageSize}
    </select>
    <!--  有考试编号没有班级编号  -->
    <select id="examIdTotal" resultType="int">
        select COUNT(*)
        from t_score s
        where s.exam_id = #{examId}
          and s.class_id in (
            SELECT c.class_id
            from t_teacher t,
                 t_relation r,
                 t_class c
            where t.tea_id = #{teaId}
              AND t.tea_id = r.tea_id
              AND r.class_id = c.class_id)
    </select>
    <!--  有班级编号没有考试编号  -->
    <select id="classIdTotal" resultType="int">
        select count(*)
        from t_score s
        where s.class_id = #{classId}
    </select>
    <!--  根据班级编号和考试编号查询  -->
    <select id="examIdClassIdTotal" resultType="int">
        select count(*)
        from t_score s
        where s.class_id = #{classId}
          and s.exam_id = #{examId}
    </select>
    <!--  根据班级编号考试编号和学生姓名模糊查询成绩  -->
    <select id="byClassIdExamIdStuNameSelectScore" resultType="top.thorns.studentScore.dto.ScoreLIstDto">
        select
        s.score_id,s.stu_id,stu.stu_name,e.exam_name,c.class_name,s.language_score,s.math_score,s.english_score,s.politics_score,s.history_score,s.geog_score,
        SUM(s.language_score+s.math_score+s.english_score+s.politics_score+s.history_score+s.geog_score)total_points
        from t_score s,t_exam e,t_student stu,t_class c
        where stu.stu_id=s.stu_id and
        s.exam_id=e.exam_id and
        <if test="examId!=null">
            s.exam_id= #{examId} and
        </if>
        <if test="classId!=null">
            s.class_id=#{classId} and
        </if>
        <if test="classId==null">
            c.class_id in(
            SELECT c.class_id
            from t_teacher t,t_relation r,t_class c
            where t.tea_id=#{teaId} AND
            t.tea_id=r.tea_id AND
            r.class_id=c.class_id) and
        </if>
        s.class_id=c.class_id and
        stu.stu_name in (SELECT stu.stu_name
        FROM t_student stu
        WHERE stu.stu_name LIKE #{stuName})
        group by s.score_id
    </select>
    <!--  根据成绩编号查询所对应班级编号  -->
    <select id="selectClassIdByScoreId" resultType="int">
        select t.class_id
        from t_score t
        where t.score_id = #{scoerId}
    </select>
    <!--  根据成绩编号查询所对应考试编号  -->
    <select id="selectExamIdByScoreId" resultType="int">
        select t.exam_id
        from t_score t
        where t.score_id = #{scoerId}
    </select>
    <!--  根据班级编号和考试编号查询各科及格人数  -->
    <select id="selectPassNum" resultType="top.thorns.studentScore.dto.PassNum">
        SELECT COUNT(*)                                     as total,
               COUNT(IF(t.language_score > 60, TRUE, NULL)) AS languageNum,
               COUNT(IF(t.math_score > 60, TRUE, NULL))     AS mathNum,
               COUNT(IF(t.english_score > 60, TRUE, NULL))  AS englishNum,
               COUNT(IF(t.politics_score > 60, TRUE, NULL)) AS politicsNum,
               COUNT(IF(t.history_score > 60, TRUE, NULL))  AS historyNum,
               COUNT(IF(t.geog_score > 60, TRUE, NULL))     AS geogNum
        from t_score t
        WHERE t.class_id = #{classId}
          and t.exam_id = #{examId}
    </select>
    <!--  根据班级编号和考试编号获取各科及格率  -->
    <select id="selectPassRate" resultType="top.thorns.studentScore.dto.PassRate">
        SELECT CONVERT(COUNT(IF(t.language_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL
                       (4, 1))                                                                     AS languagePassRate,
               CONVERT(COUNT(IF(t.math_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4, 1))  AS mathPassRate,
               CONVERT(COUNT(IF(t.english_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4,
                                                                                              1))  AS englishPassRate,
               CONVERT(COUNT(IF(t.politics_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4,
                                                                                               1)) AS politicsPassRate,
               CONVERT(COUNT(IF(t.history_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4,
                                                                                              1))  AS historyPassRate,
               CONVERT(COUNT(IF(t.geog_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4, 1))  AS geogPassRate
        from t_score t
        WHERE t.class_id = #{classId}
          and t.exam_id = #{examId}
    </select>
    <!--  根据班级编号和考试编号查询出各科平均分数  -->
    <select id="selectScoreAvg" resultType="top.thorns.studentScore.dto.ScoreAvgDto">
        SELECT CONVERT(AVG(language_score), DECIMAL (4, 1)) languageScoreAvg,
               CONVERT(AVG(math_score), DECIMAL (4, 1))     mathScoreAvg,
               CONVERT(AVG(english_score), DECIMAL (4, 1))  englishScoreAvg,
               CONVERT(AVG(politics_score), DECIMAL (4, 1)) politicsScoreAvg,
               CONVERT(AVG(history_score), DECIMAL (4, 1))  historyScoreAvg,
               CONVERT(AVG(geog_score), DECIMAL (4, 1))     geogScoreAvg,
               CONVERT(AVG(language_score), DECIMAL (4, 1)) +
               CONVERT(AVG(math_score), DECIMAL (4, 1)) +
               CONVERT(AVG(english_score), DECIMAL (4, 1)) +
               CONVERT(AVG(politics_score), DECIMAL (4, 1)) +
               CONVERT(AVG(history_score), DECIMAL (4, 1)) +
               CONVERT(AVG(geog_score), DECIMAL (4, 1))     totalScoreAvg
        from t_score
        WHERE class_id = #{classId}
          and exam_id = #{examId}
    </select>
    <!--  根据班级编号和考试编号查询出总分最高  -->
    <select id="selectTotalScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.total">
        SELECT temp.total as totalScoreMax, temp.stu_id as totalScoreID, temp.stu_name as totalScoreName
        from (SELECT (s.language_score + s.math_score + s.english_score + s.politics_score + s.history_score +
                      s.geog_score) as total,
                     stu.stu_id,
                     stu.stu_name
              from t_score s,
                   t_student stu
              WHERE s.class_id = #{classId}
                and s.exam_id = #{examId}
                and s.stu_id = stu.stu_id
              GROUP BY s.score_id) as temp
        WHERE temp.total = (SELECT MAX(flag.total)
                            FROM (SELECT (s.language_score + s.math_score + s.english_score + s.politics_score +
                                          s.history_score + s.geog_score) as total
                                  from t_score s,
                                       t_student stu
                                  WHERE s.class_id = #{classId}
                                    and s.exam_id = #{examId}
                                    and s.stu_id = stu.stu_id
                                  GROUP BY s.score_id) as flag
        )
    </select>
    <!--  根据班级编号和考试编号查询出语文最高分数  -->
    <select id="selectLanguageScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.language">
        SELECT stu.stu_name as languageScoreName, s.language_score as languageScoreMax, s.stu_id as languageScoreId
        from t_score s,
             t_student stu
        WHERE s.class_id = #{classId}
          and s.exam_id = #{examId}
          and s.stu_id = stu.stu_id
          AND s.language_score = (
            SELECT max(s1.language_score)
            from t_score s1
            WHERE s1.class_id = #{classId}
              and s1.exam_id = #{examId}
        )
    </select>
    <!--  根据班级编号和考试编号查询出数学最高分数  -->
    <select id="selectMathScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.math">
        SELECT stu.stu_name as mathScoreName, s.math_score as mathScoreMax, s.stu_id as mathScoreId
        from t_score s,
             t_student stu
        WHERE s.class_id = #{classId}
          and s.exam_id = #{examId}
          and s.stu_id = stu.stu_id
          AND s.math_score = (
            SELECT max(s1.math_score)
            from t_score s1
            WHERE s1.class_id = #{classId}
              and s1.exam_id = #{examId}
        )
    </select>
    <select id="selectEnglishScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.english">
        SELECT stu.stu_name as englishScoreName, s.english_score as englishScoreMax, s.stu_id as englishScoreId
        from t_score s,
             t_student stu
        WHERE s.class_id = #{classId}
          and s.exam_id = #{examId}
          and s.stu_id = stu.stu_id
          AND s.english_score = (
            SELECT max(s1.english_score)
            from t_score s1
            WHERE s1.class_id = #{classId}
              and s1.exam_id = #{examId}
        )
    </select>
    <select id="selectPoliticsScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.politics">
        SELECT stu.stu_name as politicsScoreName, s.politics_score as politicsScoreMax, s.stu_id as politicsScoreId
        from t_score s,
             t_student stu
        WHERE s.class_id = #{classId}
          and s.exam_id = #{examId}
          and s.stu_id = stu.stu_id
          AND s.politics_score = (
            SELECT max(s1.politics_score)
            from t_score s1
            WHERE s1.class_id = #{classId}
              and s1.exam_id = #{examId}
        )
    </select>
    <select id="selectHistoryScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.history">
        SELECT stu.stu_name as historyScoreName, s.history_score as historyScoreMax, s.stu_id as historyScoreId
        from t_score s,
             t_student stu
        WHERE s.class_id = #{classId}
          and s.exam_id = #{examId}
          and s.stu_id = stu.stu_id
          AND s.history_score = (
            SELECT max(s1.history_score)
            from t_score s1
            WHERE s1.class_id = #{classId}
              and s1.exam_id = #{examId}
        )
    </select>
    <select id="selectGeogScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.geog">
        SELECT stu.stu_name as geogScoreName, s.geog_score as geogScoreMax, s.stu_id as geogScoreId
        from t_score s,
             t_student stu
        WHERE s.class_id = #{classId}
          and s.exam_id = #{examId}
          and s.stu_id = stu.stu_id
          AND s.geog_score = (
            SELECT max(s1.geog_score)
            from t_score s1
            WHERE s1.class_id = #{classId}
              and s1.exam_id = #{examId}
        )
    </select>
    <!--  管理员模块分页查询成绩  -->
    <select id="adminSelectScore" resultType="top.thorns.studentScore.dto.ScoreLIstDto">
        SELECT
        s.score_id,s.stu_id,stu.stu_name,e.exam_name,c.class_name,s.language_score,s.math_score,s.english_score,s.politics_score,s.history_score,s.geog_score,SUM(s.language_score+s.math_score+s.english_score+s.politics_score+s.history_score+s.geog_score)total_points
        from t_score s,t_exam e,t_student stu,t_class c
        WHERE
        <if test="dto.examId!=null">
            s.exam_id =#{dto.examId} and
        </if>
        <if test="dto.classId!=null">
            s.class_id=#{dto.classId} and
        </if>
        c.class_id=s.class_id and
        s.exam_id=e.exam_id and
        s.stu_id=stu.stu_id
        GROUP BY s.score_id
        <if test="dto.order!=null and dto.order.length()>0">
            order by ${dto.sortName} ${dto.order}
        </if>
        <if test="dto.order==null || dto.order.length()==0">
            order by s.score_id ASC
        </if>
        limit #{dto.pageNow},#{dto.size}
    </select>
    <select id="adminSelectScoreTotal" resultType="int">
        select count(*)
        from t_score s
        WHERE
        <if test="dto.examId!=null and dto.classId!=null">
            s.exam_id =#{dto.examId} and
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.examId!=null and dto.classId==null">
            s.exam_id =#{dto.examId}
        </if>
    </select>
    <!--  根据学生姓名模糊查询  -->
    <select id="adminSelectScoreByStuName" resultType="top.thorns.studentScore.dto.ScoreLIstDto">
        SELECT
        s.score_id,s.stu_id,stu.stu_name,e.exam_name,c.class_name,s.language_score,s.math_score,s.english_score,s.politics_score,s.history_score,s.geog_score,SUM(s.language_score+s.math_score+s.english_score+s.politics_score+s.history_score+s.geog_score)total_points
        from t_score s,t_exam e,t_student stu,t_class c
        WHERE
        <if test="dto.examId!=null">
            s.exam_id =#{dto.examId} and
        </if>
        <if test="dto.classId!=null">
            s.class_id=#{dto.classId} and
        </if>
        c.class_id=s.class_id and
        s.exam_id=e.exam_id and
        s.stu_id=stu.stu_id and
        stu.stu_name like #{dto.stuName}
        GROUP BY s.score_id
    </select>
    <!--  管理员模块及格率统计  -->
    <select id="adminSelectPassRate" resultType="top.thorns.studentScore.dto.PassRate">
        SELECT CONVERT(COUNT(IF(t.language_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL
        (4, 1)) AS languagePassRate,
        CONVERT(COUNT(IF(t.math_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4, 1)) AS mathPassRate,
        CONVERT(COUNT(IF(t.english_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4,
        1)) AS englishPassRate,
        CONVERT(COUNT(IF(t.politics_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4,
        1)) AS politicsPassRate,
        CONVERT(COUNT(IF(t.history_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4,
        1)) AS historyPassRate,
        CONVERT(COUNT(IF(t.geog_score > 60, TRUE, NULL)) * 100 / COUNT(*), DECIMAL (4, 1)) AS geogPassRate
        from t_score t
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            t.class_id=#{dto.classId} and
            t.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            t.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            t.exam_id=#{dto.examId}
        </if>
    </select>
    <!-- 管理员模块及格人数统计 -->
    <select id="adminSelectPassNum" resultType="top.thorns.studentScore.dto.PassNum">
        SELECT COUNT(*) as total,
        COUNT(IF(t.language_score > 60, TRUE, NULL)) AS languageNum,
        COUNT(IF(t.math_score > 60, TRUE, NULL)) AS mathNum,
        COUNT(IF(t.english_score > 60, TRUE, NULL)) AS englishNum,
        COUNT(IF(t.politics_score > 60, TRUE, NULL)) AS politicsNum,
        COUNT(IF(t.history_score > 60, TRUE, NULL)) AS historyNum,
        COUNT(IF(t.geog_score > 60, TRUE, NULL)) AS geogNum
        from t_score t
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            t.class_id=#{dto.classId} and
            t.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            t.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            t.exam_id=#{dto.examId}
        </if>
    </select>
    <!--  管理员模块统计各科平均分数  -->
    <select id="adminSelectScoreAvg" resultType="top.thorns.studentScore.dto.ScoreAvgDto">
        SELECT CONVERT(AVG(language_score), DECIMAL (4, 1)) languageScoreAvg,
        CONVERT(AVG(math_score), DECIMAL (4, 1)) mathScoreAvg,
        CONVERT(AVG(english_score), DECIMAL (4, 1)) englishScoreAvg,
        CONVERT(AVG(politics_score), DECIMAL (4, 1)) politicsScoreAvg,
        CONVERT(AVG(history_score), DECIMAL (4, 1)) historyScoreAvg,
        CONVERT(AVG(geog_score), DECIMAL (4, 1)) geogScoreAvg,
        CONVERT(AVG(language_score), DECIMAL (4, 1)) +
        CONVERT(AVG(math_score), DECIMAL (4, 1)) +
        CONVERT(AVG(english_score), DECIMAL (4, 1)) +
        CONVERT(AVG(politics_score), DECIMAL (4, 1)) +
        CONVERT(AVG(history_score), DECIMAL (4, 1)) +
        CONVERT(AVG(geog_score), DECIMAL (4, 1)) totalScoreAvg
        from t_score t
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            t.class_id=#{dto.classId} and
            t.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            t.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            t.exam_id=#{dto.examId}
        </if>
    </select>
    <!--  管理员模块根据班级编号和考试编号查询出总分最高  -->
    <select id="adminSelectTotalScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.total">
        SELECT temp.total as totalScoreMax, temp.stu_id as totalScoreID, temp.stu_name as totalScoreName
        from (SELECT (s.language_score + s.math_score + s.english_score + s.politics_score + s.history_score +
        s.geog_score) as total,
        stu.stu_id,
        stu.stu_name
        from t_score s,
        t_student stu
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s.class_id=#{dto.classId} and
            s.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s.exam_id=#{dto.examId}
        </if>
        and s.stu_id = stu.stu_id
        GROUP BY s.score_id) as temp
        WHERE temp.total = (SELECT MAX(flag.total)
        FROM (SELECT (s.language_score + s.math_score + s.english_score + s.politics_score +
        s.history_score + s.geog_score) as total
        from t_score s,
        t_student stu
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s.class_id=#{dto.classId} and
            s.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s.exam_id=#{dto.examId}
        </if>
        and s.stu_id = stu.stu_id
        GROUP BY s.score_id) as flag
        )
    </select>
    <!--  根据班级编号和考试编号查询出语文最高分数  -->
    <select id="adminSelectLanguageScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.language">
        SELECT stu.stu_name as languageScoreName, s.language_score as languageScoreMax, s.stu_id as languageScoreId
        from t_score s,
        t_student stu
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s.class_id=#{dto.classId} and
            s.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s.exam_id=#{dto.examId}
        </if>
        and s.stu_id = stu.stu_id
        AND s.language_score = (
        SELECT max(s1.language_score)
        from t_score s1
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s1.class_id=#{dto.classId} and
            s1.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s1.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s1.exam_id=#{dto.examId}
        </if>
        )
    </select>
    <!--  根据班级编号和考试编号查询出数学最高分数  -->
    <select id="adminSelectMathScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.math">
        SELECT stu.stu_name as mathScoreName, s.math_score as mathScoreMax, s.stu_id as mathScoreId
        from t_score s,
        t_student stu
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s.class_id=#{dto.classId} and
            s.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s.exam_id=#{dto.examId}
        </if>
        and s.stu_id = stu.stu_id
        AND s.math_score = (
        SELECT max(s1.math_score)
        from t_score s1
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s1.class_id=#{dto.classId} and
            s1.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s1.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s1.exam_id=#{dto.examId}
        </if>
        )
    </select>
    <select id="adminSelectEnglishScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.english">
        SELECT stu.stu_name as englishScoreName, s.english_score as englishScoreMax, s.stu_id as englishScoreId
        from t_score s,
        t_student stu
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s.class_id=#{dto.classId} and
            s.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s.exam_id=#{dto.examId}
        </if>
        and s.stu_id = stu.stu_id
        AND s.english_score = (
        SELECT max(s1.english_score)
        from t_score s1
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s1.class_id=#{dto.classId} and
            s1.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s1.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s1.exam_id=#{dto.examId}
        </if>
        )
    </select>
    <select id="adminSelectPoliticsScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.politics">
        SELECT stu.stu_name as politicsScoreName, s.politics_score as politicsScoreMax, s.stu_id as politicsScoreId
        from t_score s,
        t_student stu
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s.class_id=#{dto.classId} and
            s.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s.exam_id=#{dto.examId}
        </if>
        and s.stu_id = stu.stu_id
        AND s.politics_score = (
        SELECT max(s1.politics_score)
        from t_score s1
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s1.class_id=#{dto.classId} and
            s1.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s1.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s1.exam_id=#{dto.examId}
        </if>
        )
    </select>
    <select id="adminSelectHistoryScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.history">
        SELECT stu.stu_name as historyScoreName, s.history_score as historyScoreMax, s.stu_id as historyScoreId
        from t_score s,
        t_student stu
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s.class_id=#{dto.classId} and
            s.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s.exam_id=#{dto.examId}
        </if>
        and s.stu_id = stu.stu_id
        AND s.history_score = (
        SELECT max(s1.history_score)
        from t_score s1
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s1.class_id=#{dto.classId} and
            s1.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s1.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s1.exam_id=#{dto.examId}
        </if>
        )
    </select>
    <select id="adminSelectGeogScoreMax" resultType="top.thorns.studentScore.dto.scoreMax.geog">
        SELECT stu.stu_name as geogScoreName, s.geog_score as geogScoreMax, s.stu_id as geogScoreId
        from t_score s,
        t_student stu
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s.class_id=#{dto.classId} and
            s.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s.exam_id=#{dto.examId}
        </if>
        and s.stu_id = stu.stu_id
        AND s.geog_score = (
        SELECT max(s1.geog_score)
        from t_score s1
        WHERE
        <if test="dto.classId!=null and dto.examId!=null">
            s1.class_id=#{dto.classId} and
            s1.exam_id=#{dto.examId}
        </if>
        <if test="dto.classId!=null and dto.examId==null">
            s1.class_id=#{dto.classId}
        </if>
        <if test="dto.classId==null and dto.examId!=null">
            s1.exam_id=#{dto.examId}
        </if>
        )
    </select>
</mapper>
